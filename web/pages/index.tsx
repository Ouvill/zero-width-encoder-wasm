import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import React, { useCallback, useEffect, useMemo } from "react";
import {
  Box,
  Button,
  Card,
  CardContent,
  Link,
  TextField,
  Typography,
} from "@mui/material";
import { detectSteganography, embedSteganography } from "../lib/steganography";

const CreateSteganography = () => {
  const [text, setText] = React.useState("こんにちは");
  const [hiddenText, setHiddenText] = React.useState("Hello World!");
  const [embeddedText, setEmbeddedText] = React.useState("");
  const genEmbeddedText = () => {
    const output = embedSteganography(text, hiddenText);
    setEmbeddedText(output);
  };

  useEffect(() => {
    console.log(text);
  }, [text]);
  return (
    <div>
      <div>
        <Typography variant="h6">テキスト</Typography>
        <TextField
          multiline={true}
          rows={6}
          onChange={(e) => setText(e.target.value)}
          value={text}
          fullWidth={true}
        />
      </div>

      <div>
        <Typography variant="h6">秘密のテキスト</Typography>
        <TextField
          multiline={true}
          rows={6}
          onChange={(e) => setHiddenText(e.target.value)}
          value={hiddenText}
          fullWidth={true}
        />
      </div>

      <Button onClick={genEmbeddedText}>embed</Button>

      <div>
        <Typography variant="h6">
          秘密のメッセージが埋め込まれたテキスト
        </Typography>
        <Typography variant={"caption"}>
          コピーして利用してみてください
        </Typography>
        <TextField
          variant={"filled"}
          value={embeddedText}
          rows={6}
          multiline={true}
          fullWidth={true}
        />
      </div>
    </div>
  );
};

const CreateSteganographyCard = () => {
  return (
    <Card>
      <CardContent>
        <Typography variant={"h5"}>作成</Typography>
        <CreateSteganography />
      </CardContent>
    </Card>
  );
};

export const DetectSteganography = () => {
  const [targetText, setTargetText] = React.useState("");
  const detected = useMemo(() => detectSteganography(targetText), [targetText]);
  return (
    <div>
      <div>
        <Typography variant={"h6"}>メッセージ</Typography>
        <TextField
          value={targetText}
          onChange={(e) => {
            setTargetText(e.target.value);
          }}
          multiline={true}
          rows={6}
          fullWidth={true}
        />
      </div>
      <div>
        <Typography variant={"h6"}>検出結果</Typography>
        <TextField
          variant={"filled"}
          value={detected[0] || ""}
          multiline={true}
          rows={6}
          fullWidth={true}
        />
      </div>
    </div>
  );
};

const DetectSteganographyCard = () => {
  return (
    <Card>
      <CardContent>
        <Typography variant={"h5"}>検出</Typography>
        <DetectSteganography />
      </CardContent>
    </Card>
  );
};

const TabPanel = ({
  children,
  value,
  index,
}: {
  value: number;
  index: number;
  children: React.ReactChild;
}) => {
  return (
    <div role={"tabpanel"} hidden={value !== index}>
      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
    </div>
  );
};

const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Typography className={styles.title}>秘密のメッセージ</Typography>
        <div className={styles.cards}>
          <CreateSteganographyCard />
          <DetectSteganographyCard />
        </div>
        <Button component={Link} href={"/novel"} variant={"contained"}>
          応用
        </Button>
      </main>

      <footer className={styles.footer}>created by Ouvill</footer>
    </div>
  );
};

export default Home;
